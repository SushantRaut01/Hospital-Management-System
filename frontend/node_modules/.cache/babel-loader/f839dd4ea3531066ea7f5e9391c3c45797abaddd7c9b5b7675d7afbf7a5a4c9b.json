{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Hospital-Management-System/frontend/src/Pages/Doctor/DoctorDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport PatientList from \"./components/PatientList\";\nimport PatientDetails from \"./components/PatientDetails\";\nimport MedicineSuggestions from \"./components/MedicineSuggestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [prescriptions, setPrescriptions] = useState({});\n  useEffect(() => {\n    const fetchPatients = () => {\n      fetch(\"http://localhost:8000/api/doctor/incoming-patients/\").then(res => res.json()).then(data => setPatients(data)).catch(err => console.error(\"Fetch error:\", err));\n    };\n    fetchPatients(); // Initial load\n    const interval = setInterval(fetchPatients, 3000); // Every 3 sec\n    return () => clearInterval(interval); // Clean up\n  }, []);\n  const handleFormSubmit = (e, patientId) => {\n    e.preventDefault();\n    const form = e.target;\n    const med = form.med.value.trim();\n    const dose = form.dose.value.trim();\n    const freq = form.freq.value.trim();\n    const time = form.time.value.trim();\n    const remarks = form.remarks.value.trim();\n    if (med && dose && freq && time) {\n      const newPrescription = `• ${med} — ${dose}, ${freq}, ${time}${remarks ? \" (\" + remarks + \")\" : \"\"}`;\n      setPrescriptions(prev => ({\n        ...prev,\n        [patientId]: [...(prev[patientId] || []), newPrescription]\n      }));\n      form.reset();\n    }\n  };\n  const fillPrescription = (med, dose, freq, time) => {\n    const form = document.querySelector(\"#selectedPatient form\");\n    if (form) {\n      form.med.value = med;\n      form.dose.value = dose;\n      form.freq.value = freq;\n      form.time.value = time;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex flex-1 overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(PatientList, {\n          patients: patients,\n          setSelectedPatient: setSelectedPatient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex-1 bg-gray-50 p-6 overflow-y-auto\",\n          id: \"selectedPatient\",\n          children: [/*#__PURE__*/_jsxDEV(PatientDetails, {\n            patient: selectedPatient,\n            onSubmit: handleFormSubmit,\n            prescriptions: prescriptions[selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.id] || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MedicineSuggestions, {\n            fillPrescription: fillPrescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDashboard, \"fDgyVDgYiLmiMXdDalUp48G+3T8=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Navbar","PatientList","PatientDetails","MedicineSuggestions","jsxDEV","_jsxDEV","DoctorDashboard","_s","patients","setPatients","selectedPatient","setSelectedPatient","prescriptions","setPrescriptions","fetchPatients","fetch","then","res","json","data","catch","err","console","error","interval","setInterval","clearInterval","handleFormSubmit","e","patientId","preventDefault","form","target","med","value","trim","dose","freq","time","remarks","newPrescription","prev","reset","fillPrescription","document","querySelector","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","patient","onSubmit","_c","$RefreshReg$"],"sources":["/home/ubuntu/Hospital-Management-System/frontend/src/Pages/Doctor/DoctorDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport PatientList from \"./components/PatientList\";\nimport PatientDetails from \"./components/PatientDetails\";\nimport MedicineSuggestions from \"./components/MedicineSuggestions\";\n\nconst DoctorDashboard = () => {\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [prescriptions, setPrescriptions] = useState({});\n\n  useEffect(() => {\n    const fetchPatients = () => {\n      fetch(\"http://localhost:8000/api/doctor/incoming-patients/\")\n        .then((res) => res.json())\n        .then((data) => setPatients(data))\n        .catch((err) => console.error(\"Fetch error:\", err));\n    };\n\n    fetchPatients(); // Initial load\n    const interval = setInterval(fetchPatients, 3000); // Every 3 sec\n    return () => clearInterval(interval); // Clean up\n  }, []);\n\n  const handleFormSubmit = (e, patientId) => {\n    e.preventDefault();\n    const form = e.target;\n    const med = form.med.value.trim();\n    const dose = form.dose.value.trim();\n    const freq = form.freq.value.trim();\n    const time = form.time.value.trim();\n    const remarks = form.remarks.value.trim();\n\n    if (med && dose && freq && time) {\n      const newPrescription = `• ${med} — ${dose}, ${freq}, ${time}${remarks ? \" (\" + remarks + \")\" : \"\"}`;\n      setPrescriptions((prev) => ({\n        ...prev,\n        [patientId]: [...(prev[patientId] || []), newPrescription],\n      }));\n      form.reset();\n    }\n  };\n\n  const fillPrescription = (med, dose, freq, time) => {\n    const form = document.querySelector(\"#selectedPatient form\");\n    if (form) {\n      form.med.value = med;\n      form.dose.value = dose;\n      form.freq.value = freq;\n      form.time.value = time;\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 font-sans\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Navbar />\n        <main className=\"flex flex-1 overflow-hidden\">\n          <PatientList patients={patients} setSelectedPatient={setSelectedPatient} />\n          <section className=\"flex-1 bg-gray-50 p-6 overflow-y-auto\" id=\"selectedPatient\">\n            <PatientDetails\n              patient={selectedPatient}\n              onSubmit={handleFormSubmit}\n              prescriptions={prescriptions[selectedPatient?.id] || []}\n            />\n            <MedicineSuggestions fillPrescription={fillPrescription} />\n          </section>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}