{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/Hospital-Management-System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import Sidebar from\"./components/Sidebar\";import Navbar from\"./components/Navbar\";import PatientList from\"./components/PatientList\";import PatientDetails from\"./components/PatientDetails\";import MedicineSuggestions from\"./components/MedicineSuggestions\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DoctorDashboard=()=>{const[patients,setPatients]=useState([]);const[selectedPatient,setSelectedPatient]=useState(null);const[prescriptions,setPrescriptions]=useState({});useEffect(()=>{const fetchPatients=()=>{fetch(\"http://localhost:8000/api/doctor/incoming-patients/\").then(res=>res.json()).then(data=>setPatients(data)).catch(err=>console.error(\"Fetch error:\",err));};fetchPatients();// Initial load\nconst interval=setInterval(fetchPatients,3000);// Every 3 sec\nreturn()=>clearInterval(interval);// Clean up\n},[]);const handleFormSubmit=(e,patientId)=>{e.preventDefault();const form=e.target;const med=form.med.value.trim();const dose=form.dose.value.trim();const freq=form.freq.value.trim();const time=form.time.value.trim();const remarks=form.remarks.value.trim();if(med&&dose&&freq&&time){const newPrescription=\"\\u2022 \".concat(med,\" \\u2014 \").concat(dose,\", \").concat(freq,\", \").concat(time).concat(remarks?\" (\"+remarks+\")\":\"\");setPrescriptions(prev=>_objectSpread(_objectSpread({},prev),{},{[patientId]:[...(prev[patientId]||[]),newPrescription]}));form.reset();}};const fillPrescription=(med,dose,freq,time)=>{const form=document.querySelector(\"#selectedPatient form\");if(form){form.med.value=med;form.dose.value=dose;form.freq.value=freq;form.time.value=time;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen bg-gray-100 font-sans\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex flex-1 overflow-hidden\",children:[/*#__PURE__*/_jsx(PatientList,{patients:patients,setSelectedPatient:setSelectedPatient}),/*#__PURE__*/_jsxs(\"section\",{className:\"flex-1 bg-gray-50 p-6 overflow-y-auto\",id:\"selectedPatient\",children:[/*#__PURE__*/_jsx(PatientDetails,{patient:selectedPatient,onSubmit:handleFormSubmit,prescriptions:prescriptions[selectedPatient===null||selectedPatient===void 0?void 0:selectedPatient.id]||[]}),/*#__PURE__*/_jsx(MedicineSuggestions,{fillPrescription:fillPrescription})]})]})]})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Navbar","PatientList","PatientDetails","MedicineSuggestions","jsx","_jsx","jsxs","_jsxs","DoctorDashboard","patients","setPatients","selectedPatient","setSelectedPatient","prescriptions","setPrescriptions","fetchPatients","fetch","then","res","json","data","catch","err","console","error","interval","setInterval","clearInterval","handleFormSubmit","e","patientId","preventDefault","form","target","med","value","trim","dose","freq","time","remarks","newPrescription","concat","prev","_objectSpread","reset","fillPrescription","document","querySelector","className","children","id","patient","onSubmit"],"sources":["/home/ubuntu/Hospital-Management-System/frontend/src/Pages/Doctor/DoctorDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport PatientList from \"./components/PatientList\";\nimport PatientDetails from \"./components/PatientDetails\";\nimport MedicineSuggestions from \"./components/MedicineSuggestions\";\n\nconst DoctorDashboard = () => {\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [prescriptions, setPrescriptions] = useState({});\n\n  useEffect(() => {\n    const fetchPatients = () => {\n      fetch(\"http://localhost:8000/api/doctor/incoming-patients/\")\n        .then((res) => res.json())\n        .then((data) => setPatients(data))\n        .catch((err) => console.error(\"Fetch error:\", err));\n    };\n\n    fetchPatients(); // Initial load\n    const interval = setInterval(fetchPatients, 3000); // Every 3 sec\n    return () => clearInterval(interval); // Clean up\n  }, []);\n\n  const handleFormSubmit = (e, patientId) => {\n    e.preventDefault();\n    const form = e.target;\n    const med = form.med.value.trim();\n    const dose = form.dose.value.trim();\n    const freq = form.freq.value.trim();\n    const time = form.time.value.trim();\n    const remarks = form.remarks.value.trim();\n\n    if (med && dose && freq && time) {\n      const newPrescription = `• ${med} — ${dose}, ${freq}, ${time}${remarks ? \" (\" + remarks + \")\" : \"\"}`;\n      setPrescriptions((prev) => ({\n        ...prev,\n        [patientId]: [...(prev[patientId] || []), newPrescription],\n      }));\n      form.reset();\n    }\n  };\n\n  const fillPrescription = (med, dose, freq, time) => {\n    const form = document.querySelector(\"#selectedPatient form\");\n    if (form) {\n      form.med.value = med;\n      form.dose.value = dose;\n      form.freq.value = freq;\n      form.time.value = time;\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 font-sans\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Navbar />\n        <main className=\"flex flex-1 overflow-hidden\">\n          <PatientList patients={patients} setSelectedPatient={setSelectedPatient} />\n          <section className=\"flex-1 bg-gray-50 p-6 overflow-y-auto\" id=\"selectedPatient\">\n            <PatientDetails\n              patient={selectedPatient}\n              onSubmit={handleFormSubmit}\n              prescriptions={prescriptions[selectedPatient?.id] || []}\n            />\n            <MedicineSuggestions fillPrescription={fillPrescription} />\n          </section>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}