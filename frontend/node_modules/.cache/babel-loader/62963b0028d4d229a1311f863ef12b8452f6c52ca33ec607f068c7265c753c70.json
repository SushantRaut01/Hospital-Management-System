{"ast":null,"code":"const BASE_URL=process.env.REACT_APP_API_URL;const API_PREFIX=process.env.REACT_APP_API_BASE_URL;export async function apiFetch(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(BASE_URL).concat(API_PREFIX).concat(endpoint);const response=await fetch(url,options);if(!response.ok){throw new Error(\"API error: \".concat(response.statusText));}return await response.json();}","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_URL","API_PREFIX","REACT_APP_API_BASE_URL","apiFetch","endpoint","options","arguments","length","undefined","url","concat","response","fetch","ok","Error","statusText","json"],"sources":["/home/ubuntu/Hospital-Management-System/frontend/src/Pages/Assistant/api.js"],"sourcesContent":["const BASE_URL = process.env.REACT_APP_API_URL;\nconst API_PREFIX = process.env.REACT_APP_API_BASE_URL;\n\nexport async function apiFetch(endpoint, options = {}) {\n  const url = `${BASE_URL}${API_PREFIX}${endpoint}`;\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error(`API error: ${response.statusText}`);\n  }\n  return await response.json();\n}\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC9C,KAAM,CAAAC,UAAU,CAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB,CAErD,MAAO,eAAe,CAAAC,QAAQA,CAACC,QAAQ,CAAgB,IAAd,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACnD,KAAM,CAAAG,GAAG,IAAAC,MAAA,CAAMb,QAAQ,EAAAa,MAAA,CAAGT,UAAU,EAAAS,MAAA,CAAGN,QAAQ,CAAE,CACjD,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,GAAG,CAAEJ,OAAO,CAAC,CAC1C,GAAI,CAACM,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,eAAAJ,MAAA,CAAeC,QAAQ,CAACI,UAAU,CAAE,CAAC,CACtD,CACA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}